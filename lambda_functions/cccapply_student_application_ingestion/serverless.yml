service: cccapply-student-application-ingestion
plugins:
  - serverless-python-requirements
package:
  exclude:
    - env/**
    - node_modules/**
provider:
  name: aws
  runtime: python3.9
  region: us-west-2
  stage: ${env:ENVIRONMENT}
  timeout: 60 # in Seconds
  memorySize: 256 # in MB
  deploymentBucket:
    name: serverless.calbright.deploys # Deployment bucket name. Default is generated by the framework
  iamRoleStatements:
    - Effect: Allow
      Action:
        - kms:*
      Resource:
        - arn:aws:kms:us-west-2:523292522460:key/69776fb9-cbe2-489c-8efe-1dd896aeab68
    - Effect: Allow
      Action:
        - ssm:GetParameter
        - ssm:GetParameters
      Resource:
        - arn:aws:ssm:us-west-2:523292522460:parameter/oracle.calbright-staging.root
    - Effect: Allow
      Action:
        - ssm:GetParameter
        - ssm:GetParameters
      Resource:
        - arn:aws:ssm:us-west-2:523292522460:parameter/psql.calbright.${env:ENVIRONMENT}.write
functions:
  lambda:
    handler: handler.run
    description: Oracle Ingestion Lambda for CCCApply Student Applications
    environment:
      ENV: ${env:ENVIRONMENT}
    vpc:
      securityGroupIds:
        - sg-03509e4c3034ce5b1 # calbright-vpc-default
      subnetIds:
        - subnet-0529f716d4db99834 # calbright-subnet-private1-us-west-2a
        - subnet-02c89c171a3ab27af # calbright-subnet-private1-us-west-2b
        - subnet-0fec26aa4af7780ea # calbright-subnet-private1-us-west-2c
    events:
      # Invoke Lambda function every 5 minutes
      - schedule: cron(0/5 * ? * * *)
    tags: # Function specific tags
      Name: calbright-cccapply-ingestion-${env:ENVIRONMENT}
      Environment: ${env:ENVIRONMENT}
custom:
  pythonRequirements:
    useDownloadCache: false
    dockerizePip: false
    zip: true
